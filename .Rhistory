# Create df for plotting
df = lapply(files, function(in_dat) {
idx_per = grep("percent", colnames(in_dat))
idx_num = grep("^num", colnames(in_dat))
per_dat = in_dat[c(1, idx_per[-c(1)])]
num_dat = in_dat[c(1:2, idx_num)]
df_per = melt(per_dat, id.vars = c("genome"))
df_num = melt(num_dat, id.vars = c("genome"))
df_per = cbind(df, genome_ord = factor(df$genome, levels = genome_ord))
df_num = cbind(df, genome_ord = factor(df$genome, levels = genome_ord))
#df_per$variable = factor(df_per$variable, labels = per_mapping)
#df_num$variable = factor(df_num$variable, labels = num_mapping)
return(list(df_per, df_num))
})
df[1]
df[1][1]
df[1][[1]]
df[1][[1]][1]
View(files)
View(df)
# Create df for plotting
df = lapply(files, function(in_dat) {
idx_per = grep("percent", colnames(in_dat))
idx_num = grep("^num", colnames(in_dat))
#per_dat = in_dat[c(1, idx_per[-c(1)])]
#num_dat = in_dat[c(1:2, idx_num)]
#df_per = melt(per_dat, id.vars = c("genome"))
#df_num = melt(num_dat, id.vars = c("genome"))
#df_per = cbind(df, genome_ord = factor(df$genome, levels = genome_ord))
#df_num = cbind(df, genome_ord = factor(df$genome, levels = genome_ord))
#df_per$variable = factor(df_per$variable, labels = per_mapping)
#df_num$variable = factor(df_num$variable, labels = num_mapping)
#return(list(df_per, df_num))
return(list(idx_per, idx_num))
})
# Create df for plotting
df_per = lapply(files, function(in_dat) {
idx_per = grep("percent", colnames(in_dat))
per_dat = in_dat[c(1, idx_per[-c(1)])]
df_per = melt(per_dat, id.vars = c("genome"))
df_per = cbind(df, genome_ord = factor(df$genome, levels = genome_ord))
df_per$variable = factor(df_per$variable, labels = per_mapping)
df_per
})
rm(df)
# Create df for plotting
df_per = lapply(files, function(in_dat) {
idx_per = grep("percent", colnames(in_dat))
per_dat = in_dat[c(1, idx_per[-c(1)])]
df_per = melt(per_dat, id.vars = c("genome"))
df_per = cbind(df_per, genome_ord = factor(df$genome, levels = genome_ord))
df_per$variable = factor(df_per$variable, labels = per_mapping)
df_per
})
# Create df for plotting
df_per = lapply(files, function(in_dat) {
idx_per = grep("percent", colnames(in_dat))
per_dat = in_dat[c(1, idx_per[-c(1)])]
df_per = melt(per_dat, id.vars = c("genome"))
df_per = cbind(df_per, genome_ord = factor(df_per$genome, levels = genome_ord))
df_per$variable = factor(df_per$variable, labels = per_mapping)
df_per
})
# Create df for plotting
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = melt(num_dat, id.vars = c("genome"))
df_num = cbind(df_num, genome_ord = factor(df_num$genome, levels = genome_ord))
df_num$variable = factor(df_num$variable, labels = num_mapping)
df_num
})
# Add IDs
df_per = Map(cbind, df, sample_name = sample_name, sample = sample, run_id = run_id, read = read)
# Add IDs
df_per = Map(cbind, df_per, sample_name = sample_name, sample = sample, run_id = run_id, read = read)
df_num = Map(cbind, df_num, sample_name = sample_name, sample = sample, run_id = run_id, read = read)
x = df_per[[1]]
View(x)
y = df_num[[1]]
View(y)
# Change factors to character
char_cols = c("sample_name", "sample", "run_id", "read")
df_per = lapply(df_per, function(df){
df[char_cols] = lapply(df[char_cols], as.character)
df
})
df_num = lapply(df_num, function(df){
df[char_cols] = lapply(df[char_cols], as.character)
df
})
?cbind
# Create df for plotting
df_per = lapply(files, function(in_dat) {
idx_per = grep("percent", colnames(in_dat))
per_dat = in_dat[c(1, idx_per[-c(1)])]
df_per = melt(per_dat, id.vars = c("genome"))
df_per = cbind(df_per, genome_ord = factor(df_per$genome, levels = genome_ord))
df_per$variable = factor(df_per$variable, labels = per_mapping)
df_per
})
df_per = Map(cbind, df_per, sample_name = sample_name, sample = sample, run_id = run_id, read = read, stringAsFactors = F)
?Map
# Create df for plotting
df_per = lapply(files, function(in_dat) {
idx_per = grep("percent", colnames(in_dat))
per_dat = in_dat[c(1, idx_per[-c(1)])]
df_per = melt(per_dat, id.vars = c("genome"))
df_per = cbind(df_per, genome_ord = factor(df_per$genome, levels = genome_ord))
df_per$variable = factor(df_per$variable, labels = per_mapping)
df_per
})
df_per = Map(cbind(stringsAsFactors = F), df_per, sample_name = sample_name, sample = sample, run_id = run_id, read = read)
# Create df for plotting
df_per = lapply(files, function(in_dat) {
idx_per = grep("percent", colnames(in_dat))
per_dat = in_dat[c(1, idx_per[-c(1)])]
df_per = melt(per_dat, id.vars = c("genome"))
df_per = cbind(df_per, genome_ord = factor(df_per$genome, levels = genome_ord))
df_per$variable = factor(df_per$variable, labels = per_mapping)
df_per
})
df_per = Map(cbind, df_per, sample_name = sample_name, sample = sample, run_id = run_id, read = read)
df_per = lapply(df_per, function(df){
df[char_cols] = lapply(df[char_cols], as.character)
df
})
# ------------- BIND ALL FILES TO MASTER DF ------------- #
df_per = bind_rows(df_per)
View(df_per)
df_num = bind_rows(df_num)
View(df_num)
# Order samples numerically
sample_levels = unique(df$sample[order(nchar(df$sample), df$sample)])
# Order samples numerically
per_sample_levels = unique(df_per$sample[order(nchar(df_per$sample), df_per$sample)])
num_sample_levels = unique(df_num$sample[order(nchar(df_num$sample), df_num$sample)])
cat("Sample names:", per_sample_levels, sep = "\n")
rm(per_sample_levels, num_sample_levels)
# Order samples numerically
sample_levels = unique(df_per$sample[order(nchar(df_per$sample), df_per$sample)])
cat("Sample names:", per_sample_levels, sep = "\n")
cat("Sample names:", sample_levels, sep = "\n")
df_per$sample_ord = factor(df_per$sample, levels = sample_levels)
View(df_per)
df_num$sample_ord = factor(df_num$sample, levels = sample_levels)
View(df_num)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?unmelt
?melt
path = "/Volumes/Lungta/projects/screen_testing/bhatia"
filenames = list.files(path=path,
pattern = "*.txt")
files = lapply(paste0(path, "/", filenames), read.delim,
sep = "\t", header = FALSE,
stringsAsFactors = FALSE)
# ----------- OPERATIONS ON EACH INDIVIDUAL FILE ----------- #
# Remove dirty first row
files = lapply(files, function(x) x[-c(1),])
# Rename the df columns appropriately
data_cols = c("genome", "reads_processed",
"num_unmapped", "percent_unmapped",
"num_one_hit_one_genome", "percent_one_hit_one_genome",
"num_multiple_hits_one_genome", "percent_multiple_hits_one_genome",
"num_one_hit_multiple_genomes", "percent_one_hit_multiple_genomes",
"num_multiple_hits_multiple_genomes", "percent_multiple_hits_multiple_genomes")
files = lapply(files, setNames, data_cols)
# Remove old header
files = lapply(files, function(x) x[-c(1),])
# Clean No Hits to fit into df as column
files = lapply(files, function(x) rbind(head(cbind(x, percent_no_hits = 0), 14),
rep(c("No hits", 0, as.numeric(gsub("[^.0-9]+", "", x[15,1]))), c(1, 11, 1))))
# Make columns numeric (except genomes)
files = lapply(files, function(x) {
x[,-c(1)] = lapply(x[,-c(1)], as.numeric)
x
})
# Lists for additional info needed in df
#sample_name = sapply(gsub("(_screen.txt)", "", all_files$name), `[`, USE.NAMES = FALSE)
sample_name = sapply(gsub("(_screen.txt)", "", filenames), `[`, USE.NAMES = FALSE)
#sample = sapply(gsub("_R\\d+", "", sample_name), `[`, USE.NAMES = FALSE)
sample = sapply(gsub("(_R\\d+)|(_S\\d+)", "", sample_name, perl = TRUE), `[`, USE.NAMES = FALSE)
run_id = sapply(gsub("(S\\d+)(*SKIP)(*FAIL)|.", "", sample_name, perl = TRUE), `[`, USE.NAMES = FALSE)
#read = sapply(gsub(".+?[?=_R\\d+]", "", sample_name), `[`, USE.NAMES = FALSE)
#read = sapply(gsub("(R\\d+)(*SKIP)(*FAIL)|.", "", sample_name, perl = TRUE), `[`, USE.NAMES = FALSE)
read = sapply(sample_name, find_read_id)
#
#
#
# ------------- FUNCTION | Helper for naming read ID ----------- #
find_read_id = function(sample_name) {
lkup_id = grep("(R\\d+)", sample_name)
if(length(lkup_id) == 0) {
cat("Nothing to grep here.", lkup_id, sep = "\n")
read_id = "Single-End"
} else {
cat("You grepped it!", lkup_id, sep = "\n")
read_id = gsub("(R\\d+)(*SKIP)(*FAIL)|.", "", sample_name, perl = TRUE)
}
return(read_id)
}
#read = sapply(gsub(".+?[?=_R\\d+]", "", sample_name), `[`, USE.NAMES = FALSE)
#read = sapply(gsub("(R\\d+)(*SKIP)(*FAIL)|.", "", sample_name, perl = TRUE), `[`, USE.NAMES = FALSE)
read = sapply(sample_name, find_read_id)
genome_ord = c("Human", "Mouse", "rRNA", "MT", "No hits", "Adapters", "Rat", "Drosophila", "Ecoli",
"Worm", "Yeast", "Arabidopsis", "Lambda", "PhiX", "Vectors")
hits = c("One Hit/One Genome", "Multiple Hits/One Genome",
"One Hit/Multiple Genomes", "Multiple Hits/Multiple Genomes")
per_mapping = c(hits, "No Hits")
num_mapping = c("Reads Processed", "Unmapped", hits)
# Create df for plotting
df_per = lapply(files, function(in_dat) {
idx_per = grep("percent", colnames(in_dat))
per_dat = in_dat[c(1, idx_per[-c(1)])]
df_per = melt(per_dat, id.vars = c("genome"))
df_per = cbind(df_per, genome_ord = factor(df_per$genome, levels = genome_ord))
df_per$variable = factor(df_per$variable, labels = per_mapping)
df_per
})
# Create df for plotting
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
#df_num = cbind(df_num, genome_ord = factor(df_num$genome, levels = genome_ord))
#df_num$variable = factor(df_num$variable, labels = num_mapping)
num_dat
})
View(df_num)
View(df_num[[1]])
num_mapping = c("Genome", "Reads Processed", "Unmapped", hits)
# Create df for plotting
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = Map(cbind, df_num, genome_ord = factor(df_num$genome, levels = genome_ord))
#df_num = cbind(df_num, genome_ord = factor(df_num$genome, levels = genome_ord))
#df_num$variable = factor(df_num$variable, labels = num_mapping)
num_dat
})
# Create df for plotting
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = lapply(num_dat, function(x){
x = cbind(x, genome_ord = factor(x$genome, levels = genome_ord))
})
#df_num = cbind(df_num, genome_ord = factor(df_num$genome, levels = genome_ord))
#df_num$variable = factor(df_num$variable, labels = num_mapping)
df_num
})
# Create df for plotting
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = cbind(num_dat, genome_ord = factor(num_dat$genome, levels = genome_ord))
#df_num$variable = factor(df_num$variable, labels = num_mapping)
df_num
})
View(df_num[[1]])
# Create df for plotting
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = cbind(num_dat, genome_ord = factor(num_dat$genome, levels = genome_ord))
df_num = lapply(df_num, setNames, num_mapping)
df_num
})
?setNames
# Create df for plotting
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = cbind(num_dat, genome_ord = factor(num_dat$genome, levels = genome_ord))
df_num = setNames(df_num, num_mapping)
df_num
})
# Create df for plotting
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = setNames(df_num, num_mapping)
df_num = cbind(num_dat, genome_ord = factor(num_dat$genome, levels = genome_ord))
df_num
})
# Create df for plotting
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = setNames(df_num, num_mapping)
df_num = cbind(num_dat, genome_ord = factor(num_dat$genome, levels = genome_ord))
df_num
})
# Create df for plotting
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = setNames(df_num, num_mapping)
df_num = cbind(df_num, genome_ord = factor(num_dat$genome, levels = genome_ord))
df_num
})
rm(df_num)
# Create df for plotting
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = setNames(num_dat, num_mapping)
df_num = cbind(df_num, genome_ord = factor(df_num$genome, levels = genome_ord))
df_num
})
# Create df for plotting
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = setNames(num_dat, num_mapping)
df_num = cbind(df_num, genome_ord = factor(df_num$Genome, levels = genome_ord))
df_num
})
runApp()
View(df_num[[1]])
# Name dfs
names(df_num) = sample_name
df_num = lapply(df_num, function(in_dat){
df_num = cbind(df_num, Sample = names(in_dat))
df_num
})
# Create df for number mapping
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = setNames(num_dat, num_mapping)
df_num = cbind(df_num, genome_ord = factor(df_num$Genome, levels = genome_ord))
df_num
})
# Name dfs
names(df_num) = sample_name
df_num = lapply(df_num, function(in_dat){
df_num = cbind(in_dat, Sample = names(in_dat))
df_num
})
# Create df for number mapping
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = setNames(num_dat, num_mapping)
df_num = cbind(df_num, genome_ord = factor(df_num$Genome, levels = genome_ord))
df_num
})
# Name dfs
names(df_num) = sample_name
df_num = lapply(df_num, function(in_dat){
df_num = cbind(in_dat, Sample = rep(names(in_dat), length(in_dat)))
df_num
})
# Create df for number mapping
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = setNames(num_dat, num_mapping)
df_num = cbind(df_num, genome_ord = factor(df_num$Genome, levels = genome_ord))
df_num
})
# Name dfs
names(df_num) = sample_name
df_num = Map(rbind, df_num, sample_name = sample_name, sample = sample, run_id = run_id, read = read)
# Create df for number mapping
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = setNames(num_dat, num_mapping)
df_num = cbind(df_num, genome_ord = factor(df_num$Genome, levels = genome_ord))
df_num
})
# Name dfs
names(df_num) = sample_name
df_num = Map(cbind, df_num, sample_name = sample_name, sample = sample, run_id = run_id, read = read)
View(df_num[[1]])
# Change factors to character
char_cols = c("sample_name", "sample", "run_id", "read")
df_per = lapply(df_per, function(df){
df[char_cols] = lapply(df[char_cols], as.character)
df
})
# Create df for plotting
df_per = lapply(files, function(in_dat) {
idx_per = grep("percent", colnames(in_dat))
per_dat = in_dat[c(1, idx_per[-c(1)])]
df_per = melt(per_dat, id.vars = c("genome"))
df_per = cbind(df_per, genome_ord = factor(df_per$genome, levels = genome_ord))
df_per$variable = factor(df_per$variable, labels = per_mapping)
df_per
})
# Add IDs
df_per = Map(cbind, df_per, sample_name = sample_name, sample = sample, run_id = run_id, read = read)
# Create df for number mapping
df_num = lapply(files, function(in_dat) {
idx_num = grep("^num", colnames(in_dat))
num_dat = in_dat[c(1:2, idx_num)]
df_num = setNames(num_dat, num_mapping)
df_num = cbind(df_num, genome_ord = factor(df_num$Genome, levels = genome_ord))
df_num
})
# Add IDs
df_num = Map(cbind, df_num, sample_name = sample_name, sample = sample, run_id = run_id, read = read)
# Change factors to character
char_cols = c("sample_name", "sample", "run_id", "read")
df_per = lapply(df_per, function(df){
df[char_cols] = lapply(df[char_cols], as.character)
df
})
# df_num
df_num = lapply(df_num, function(df){
df[char_cols] = lapply(df[char_cols], as.character)
df
})
View(df_num)
# ------------- BIND ALL FILES TO MASTER DFS ------------- #
df_per = bind_rows(df_per)
View(df_per)
df_num = bind_rows(df_num)
View(df_num)
# Order samples numerically
sample_levels = unique(df_per$sample[order(nchar(df_per$sample), df_per$sample)])
x = unique(df_num$sample[order(nchar(df_num$sample), df_num$sample)])
cat("Sample names:", sample_levels, sep = "\n")
df_per$sample_ord = factor(df_per$sample, levels = sample_levels)
df_num$sample_ord = factor(df_num$sample, levels = sample_levels)
runApp()
runApp()
runApp()
?theme
runApp()
runApp()
?unit
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?sidebarPanel
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?setNames
runApp()
runApp()
runApp()
?options
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sessionInfo()
runApp()
runApp()
runApp()
runApp()
cat("hello")
sink()
cat("hello")
runApp()
sink()
cat("hello")
cat("hello")
sink()
cat("hello")
runApp()
runApp()
runApp()
runApp()
